heat_template_version: 2015-04-30

description: Template to create a CKA cluster on OpenStack

parameter_groups:
  - label: general
    description: General Parameters
    parameters:
      - image
      - root_password

  - label: sizing
    description: Sizing Parameters
    parameters:
      - master_flavor
      - worker_flavor
      - worker_count

  - label: network
    description: Network Parameters
    parameters:
      - external_net
      - internal_net_cidr
      - dns_nameserver

parameters:
  image:
    type: string
    description: Name of image to use for servers
    constraints:
      - custom_constraint: glance.image
  external_net:
    type: string
    description: >
      Name or ID of public network for which floating IP addresses will be allocated
    default: floating
  internal_net_cidr:
    type: string
    description: Private network range which servers get deployed. Make sure this doesn't conflict with the any IP addresses CaaSP uses (e.g. the dns_cluster_ip).
    default: 172.28.0.0/24
  dns_nameserver:
    type: string
    description: Address of a dns nameserver reachable.
    default: 172.28.0.2
  master_flavor:
    type: string
    description: Master Flavor
    default: m1.large
  worker_flavor:
    type: string
    description: Worker Flavor
    default: m1.large
  worker_count:
    type: number
    description: Number of Worker nodes to boot
    default: 2
  root_password:
    type: string
    description: Root Password for the VMs
    default: linux

resources:
  keypair:
    type: OS::Nova::KeyPair
    properties:
      name:
        str_replace:
          template: {list_join: ['-', [{get_param: 'OS::stack_name'}, 'cka-keypair']]}
          params:
            ".": "-"

  internal_network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: {list_join: ['-', [{get_param: 'OS::stack_name'}, 'cka-int-net']]}
          params:
            ".": "-"

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: {get_param: internal_net_cidr}
      network: {get_resource: internal_network}
      dns_nameservers:
        - {get_param: dns_nameserver}

  external_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: external_net}

  external_router_int:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: {get_resource: external_router}
      subnet: {get_resource: internal_subnet}

  secgroup_base:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 2379
          port_range_max: 2379
        - protocol: udp
          port_range_min: 8472
          port_range_max: 8472

  secgroup_master:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          port_range_min: 2380
          port_range_max: 2380
        - protocol: tcp
          port_range_min: 6443
          port_range_max: 6444
        - protocol: udp
          port_range_min: 8285
          port_range_max: 8285
        - protocol: tcp
          port_range_min: 30000
          port_range_max: 32768
        - protocol: udp
          port_range_min: 30000
          port_range_max: 32768

  secgroup_worker:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - protocol: tcp
          port_range_min: 8080
          port_range_max: 8080
        - protocol: tcp
          port_range_min: 8081
          port_range_max: 8081
        - protocol: tcp
          port_range_min: 2380
          port_range_max: 2380
        - protocol: tcp
          port_range_min: 10250
          port_range_max: 10250
        - protocol: udp
          port_range_min: 8285
          port_range_max: 8285
        - protocol: tcp
          port_range_min: 30000
          port_range_max: 32768
        - protocol: udp
          port_range_min: 30000
          port_range_max: 32768

  master:
    type: OS::Nova::Server
    depends_on:
      - external_router_int
    properties:
      name: { list_join: ['-', [{get_param: 'OS::stack_name'}, 'master']] }
      image: { get_param: image }
      key_name: { get_resource: keypair }
      flavor: { get_param: master_flavor }
      networks:
        - port: { get_resource: master_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config

            disable_root: False
            ssh_deletekeys: False
            ssh_pwauth: True

            chpasswd:
              list: |
                root:$root_password
                ubuntu:$root_password
              expire: False

            ntp:
              enabled: true
              #servers:
              #  - ntp1.example.com
              #  - ntp2.example.com
              #  - ntp3.example.com
            runcmd:
              - /usr/bin/systemctl enable ntpd
              - /usr/bin/systemctl start ntpd
              - echo $master_node k8smaster >> /etc/hosts
          params:
            $master_node: {get_attr: [master_port, fixed_ips, 0, ip_address]}
            $root_password: { get_param: root_password }

  master_port:
    type: OS::Neutron::Port
    depends_on:
      - external_router_int
    properties:
      network: { get_resource: internal_network }
      security_groups:
        - { get_resource: secgroup_base }
        - { get_resource: secgroup_master }

  master_floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on:
      - external_router_int
    properties:
      floating_network: { get_param: external_net }

  master_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: master_floating_ip }
      port_id: { get_resource: master_port }

  worker:
    type: OS::Heat::ResourceGroup
    depends_on:
      - external_router_int
    properties:
      count: { get_param: worker_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          name: { list_join: ['-', [{get_param: 'OS::stack_name'}, 'worker', '%index%']] }
          image: { get_param: image }
          key_name: { get_resource: keypair }
          flavor: { get_param: worker_flavor }
          networks:
            - network: { get_resource: internal_network }
          security_groups:
            - { get_resource: secgroup_base }
            - { get_resource: secgroup_worker }
          user_data_format: RAW
          user_data:
            str_replace:
              template: |
                #cloud-config

                disable_root: False
                ssh_deletekeys: False
                ssh_pwauth: True

                chpasswd:
                  list: |
                    root:$root_password
                    ubuntu:$root_password
                  expire: False

                suse_caasp:
                  role: cluster
                  master_node: $master_node

                ntp:
                  enabled: true
                  #servers:
                  #  - ntp1.example.com
                  #  - ntp2.example.com
                  #  - ntp3.example.com
                runcmd:
                  - /usr/bin/systemctl enable ntpd
                  - /usr/bin/systemctl start ntpd
                  - echo $master_node k8smaster >> /etc/hosts
              params:
                $master_node: { get_attr: [master, first_address] }
                $root_password: { get_param: root_password }
